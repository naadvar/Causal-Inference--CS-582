def clean_spark_row(data):
    """
    Recursively clean PySpark Row, dict, or list by removing:
    - keys with null values
    - keys with string values containing only spaces
    - keys with empty lists
    """
    if isinstance(data, Row):
        # Convert Row to dictionary and clean it
        data = data.asDict()

    if isinstance(data, dict):
        # Clean dictionary recursively
        return {k: clean_spark_row(v) for k, v in data.items()
                if v is not None and 
                (not isinstance(v, str) or not re.fullmatch(r'\s*', v)) and
                (not isinstance(v, list) or len(v) > 0)}
    elif isinstance(data, list):
        # Clean each item in a list
        return [clean_spark_row(item) for item in data]
    else:
        # Return non-dict/non-list types as-is
        return datap
