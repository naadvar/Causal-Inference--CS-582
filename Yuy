import re
import re

def clean_structure(item):
    if isinstance(item, dict):
        # Clean each key-value pair in the dictionary
        cleaned_dict = {}
        for k, v in item.items():
            # Strip whitespace from the key
            cleaned_key = re.sub(r"\s+", " ", k).strip()

            # Recursively clean the value
            cleaned_value = clean_structure(v)

            # Add to the cleaned dictionary only if the value is valid
            if cleaned_key and cleaned_value not in [None, "", [], {}, "null"]:
                cleaned_dict[cleaned_key] = cleaned_value
        # Return None if the dictionary is empty after cleaning
        return cleaned_dict if cleaned_dict else None

    elif isinstance(item, list):
        # Clean each element in the list
        cleaned_list = [clean_structure(i) for i in item if i not in [None, "", [], {}, "null"]]
        # Return None if the list is empty after cleaning
        return cleaned_list if cleaned_list else None

    elif isinstance(item, str):
        # Clean up strings: strip whitespace and check if they are empty or "null"
        cleaned_item = re.sub(r"\s+", " ", item).strip()
        return cleaned_item if cleaned_item.lower() != "null" else None

    else:
        # For other data types (int, float, etc.), return the item unless it is None
        return None if item is None else item
def clean_structure(item):
    if isinstance(item, dict):
        # Clean each key-value pair in the dictionary
        cleaned_dict = {}
        for k, v in item.items():
            # Strip whitespace from the key
            cleaned_key = re.sub(r"\s+", " ", k).strip()

            # Recursively clean the value
            cleaned_value = clean_structure(v)

            # Add to the cleaned dictionary only if the value is valid
            if cleaned_key and cleaned_value not in [None, "", [], {}, "null"]:
                cleaned_dict[cleaned_key] = cleaned_value
        # Return None if the dictionary is empty after cleaning
        return cleaned_dict if cleaned_dict else None

    elif isinstance(item, list):
        # Clean each element in the list
        cleaned_list = [clean_structure(i) for i in item if i not in [None, "", [], {}, "null"]]
        # Return None if the list is empty after cleaning
        return cleaned_list if cleaned_list else None

    elif isinstance(item, str):
        # Clean up strings: strip whitespace and check if they are empty or "null"
        cleaned_item = re.sub(r"\s+", " ", item).strip()
        return cleaned_item if cleaned_item.lower() != "null" else None

    else:
        # For other data types (int, float, etc.), return the item unless it is None
        return None if item is None else item
